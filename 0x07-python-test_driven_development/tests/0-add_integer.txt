.. Module: 0-add_integer.py

Testing add_integer funtion
==========================
>>> add_integer = __import__("0-add_integer").add_integer

Test case 1: Adding two positive integers
-----------------------------------------
>>> add_integer(6, 9)
15

Test case 2: Adding a positive and a negative integer
-----------------------------------------------------
>>> add_integer(10, -5)
5

Test case 3: Adding a negative and a positive integer
-----------------------------------------------------
>>> add_integer(-5, 10)
5

Test case 4: Adding an integer with a missing argument
------------------------------------------------------
>>> add_integer(2)
100

Test case 5: Adding a float and an integer
------------------------------------------
>>> add_integer(1.44, 13.93)
14

Test case 6: Adding a string and a list (should raise TypeError)
----------------------------------------------------------------
>>> add_integer("2", [1, 2, 3])
Traceback (most recent call last):
TypeError: a must be an integer

Test case 7: Adding an integer and a dictionary (should raise TypeError)
------------------------------------------------------------------------
>>> add_integer(34, {"k":"v"})
Traceback (most recent call last):
TypeError: b must be an integer
